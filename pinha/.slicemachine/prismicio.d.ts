// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Content documents */
interface ContentDocumentData {
    /**
     * SEO Title field in *Content*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: content.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * SEO description field in *Content*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: content.seo_description
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    seo_description: prismicT.RichTextField;
    /**
     * Slice Zone field in *Content*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: content.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<ContentDocumentDataSlicesSlice>;
}
/**
 * Slice for *Content → Slice Zone*
 *
 */
type ContentDocumentDataSlicesSlice = ProductsSlice;
/**
 * Content document from Prismic
 *
 * - **API ID**: `content`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ContentDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<ContentDocumentData>, "content", Lang>;
/** Content for hotbar documents */
interface HotbarDocumentData {
    /**
     * menu field in *hotbar*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: hotbar.menu[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    menu: prismicT.GroupField<Simplify<HotbarDocumentDataMenuItem>>;
}
/**
 * Item in hotbar → menu
 *
 */
export interface HotbarDocumentDataMenuItem {
    /**
     * Title field in *hotbar → menu*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hotbar.menu[].title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * link field in *hotbar → menu*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: hotbar.menu[].link
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    link: prismicT.LinkField;
}
/**
 * hotbar document from Prismic
 *
 * - **API ID**: `hotbar`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HotbarDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<HotbarDocumentData>, "hotbar", Lang>;
/** Content for Page documents */
interface PageDocumentData {
    /**
     * Title field in *Page*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: page.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * Link field in *Page*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: page.link
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    link: prismicT.LinkField;
    /**
     * Slice Zone field in *Page*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: page.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<PageDocumentDataSlicesSlice>;
}
/**
 * Slice for *Page → Slice Zone*
 *
 */
type PageDocumentDataSlicesSlice = ProductsSlice;
/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;
export type AllDocumentTypes = ContentDocument | HotbarDocument | PageDocument;
/**
 * Primary content in Products → Primary
 *
 */
interface ProductsSliceDefaultPrimary {
    /**
     * Title field in *Products → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: products.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *Products → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: products.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Default variation for Products Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Products`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ProductsSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<ProductsSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Products*
 *
 */
type ProductsSliceVariation = ProductsSliceDefault;
/**
 * Products Shared Slice
 *
 * - **API ID**: `products`
 * - **Description**: `Products`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ProductsSlice = prismicT.SharedSlice<"products", ProductsSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { ContentDocumentData, ContentDocumentDataSlicesSlice, ContentDocument, HotbarDocumentData, HotbarDocumentDataMenuItem, HotbarDocument, PageDocumentData, PageDocumentDataSlicesSlice, PageDocument, AllDocumentTypes, ProductsSliceDefaultPrimary, ProductsSliceDefault, ProductsSliceVariation, ProductsSlice };
    }
}
